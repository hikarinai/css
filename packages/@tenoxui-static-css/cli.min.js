#!/usr/bin/env node
import i from"node:fs";import n from"node:path";import{fileURLToPath as a}from"node:url";import{program as e}from"commander";import s from"chokidar";import c from"ora";import l from"chalk";import{GenerateCSS as f}from"./dist/static-css.min.js";e.version("1.0.0").option("-c, --config <path>","Path to the configuration file").option("-w, --watch","Watch for file changes").option("-o, --output <path>","Output file path (overrides config file)").option("-v, --verbose","Verbose output").option("--init","Initialize a new configuration file").parse(process.argv);let p=e.opts();async function u(e){let o,r;if(e)o=n.resolve(process.cwd(),e),i.existsSync(o)||(console.error(l.red("Configuration file not found: "+o)),process.exit(1));else{for(var t of[".js",".cjs",".mjs"]){t=n.resolve(process.cwd(),"tenoxui.config"+t);if(i.existsSync(t)){o=t;break}}o||(console.error(l.red("No configuration file found. Use --init to create one.")),process.exit(1))}e=n.extname(o);try{r=".mjs"===e?await import(a(new URL(o,import.meta.url))):await import(o)}catch(e){if("ERR_REQUIRE_ESM"===e.code)r=await import(a(new URL(o,import.meta.url)));else{if("ERR_MODULE_NOT_FOUND"!==e.code)throw e;r=require(o)}}return r.default||r}function r(){var e=n.resolve(process.cwd(),"tenoxui.config.js");i.existsSync(e)&&(console.error(l.red("Configuration file already exists. Aborting initialization.")),process.exit(1)),i.writeFileSync(e,`export default {
  input: ["src/**/*.{html,jsx}"],
  output: "dist/styles.css",
  property: {
    text: "color",
    bg: "background",
    // Add more properties here
  },
  breakpoints: [
    { name: "sm", max: 640 },
    { name: "md", min: 641, max: 768 },
    { name: "lg", min: 769 }
  ]
};
`),console.log(l.green("Configuration file created successfully: tenoxui.config.js")),process.exit(0)}async function o(){if(p.init)r();else{var o=c("Loading configuration...").start();let e;try{e=await u(p.config),o.succeed("Configuration loaded")}catch(e){o.fail("Failed to load configuration"),console.error(l.red("Error loading configuration:"),e),process.exit(1)}p.output&&(e.output=p.output);let r=new f(e);function t(){var o=c("Generating CSS...").start();try{var e=r.generateFromFiles();o.succeed("CSS generation complete"),p.verbose&&(console.log(l.cyan("Generated CSS Preview: \n")),console.log(e.slice(0,500)+(500<e.length?" ...":"")))}catch(e){o.fail("CSS generation failed"),console.error(l.red("Error during CSS generation:"),e)}}t(),p.watch&&(console.log(l.yellow("Watching for file changes...")),s.watch(e.input,{ignored:/(^|[/\\])\../,persistent:!0}).on("change",e=>{console.log(l.blue(`File ${e} has been changed`)),t()}).on("add",e=>{console.log(l.green(`File ${e} has been added`)),t()}).on("unlink",e=>{console.log(l.red(`File ${e} has been removed`)),t()}))}}o().catch(e=>{console.error(l.red("An error occurred:"),e),process.exit(1)});