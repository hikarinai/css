/*!
 * tenoxui/css v0.8.0 (https://github.com/tenoxui/css)
 * Copyright (c) 2024 NOuSantx
 * Licensed under the MIT License (https://github.com/tenoxui/css/blob/main/LICENSE)
 */
import property from"./lib/property.js";let Classes,AllClasses;Classes=Object.keys(property).map((e=>`[class*="${e}-"]`));AllClasses=document.querySelectorAll(Classes.join(", "));class newProp{constructor(e,s){if(typeof e!=="string"||!Array.isArray(s)){console.warn("Invalid arguments for newProp. Please provide a string for name and an array for values.");return}this[e]=s;Classes.push(`[class*="${e}-"]`);AllClasses=document.querySelectorAll(Classes.join(", "))}tryAdd(){if(!this||Object.keys(this).length===0){console.warn("Invalid newProp instance:",this);return}Object.assign(property,this)}}class makeTenoxUI{constructor(e){this.element=e;this.styles=property}applyStyle(e,s,t){let l=this.styles[e];if(l){if(!Array.isArray(l)){l=[l]}l.forEach((l=>{if(l==="filter"){const a=this.element.style[l];this.element.style[l]=a?`${a} ${e}(${s}${t})`:`${e}(${s}${t})`}else if(e==="flex-auto"){this.element.style[l]=`1 1 ${s}${t}`}else if(e==="bg-image"){this.element.style[l]=`url(${s})`}else if(l==="backdropFilter"){const a=this.element.style[l];switch(e){case"back-blur":this.element.style[l]=`${a||""} blur(${s}${t})`;break;case"back-sepia":this.element.style[l]=`${a||""} sepia(${s}${t})`;break;case"back-saturate":this.element.style[l]=`${a||""} saturate(${s}${t})`;break;case"back-grayscale":this.element.style[l]=`${a||""} grayscale(${s}${t})`;break;case"back-brightness":this.element.style[l]=`${a||""} brightness(${s}${t})`;break;case"back-invert":this.element.style[l]=`${a||""} invert(${s}${t})`;break;case"back-contrast":this.element.style[l]=`${a||""} contrast(${s}${t})`;break;default:break}}else if(l==="transform"){const a=this.element.style[l];switch(e){case"translate":this.element.style[l]=`${a||""} translate(${s}${t})`;break;case"move-x":this.element.style[l]=`${a||""} translateX(${s}${t})`;break;case"move-y":this.element.style[l]=`${a||""} translateY(${s}${t})`;break;case"move-z":this.element.style[l]=`${a||""} translateZ(${s}${t})`;break;case"matrix":this.element.style[l]=`${a||""} matrix(${s}${t})`;break;case"matrix-3d":this.element.style[l]=`${a||""} matrix3d(${s}${t})`;break;case"scale-3d":this.element.style[l]=`${a||""} scale3d(${s}${t})`;break;case"scale-x":this.element.style[l]=`${a||""} scaleX(${s}${t})`;break;case"scale-y":this.element.style[l]=`${a||""} scaleY(${s}${t})`;break;case"scale-z":this.element.style[l]=`${a||""} scaleZ(${s}${t})`;break;case"skew-x":this.element.style[l]=`${a||""} skewX(${s}${t})`;break;case"skew-y":this.element.style[l]=`${a||""} skewY(${s}${t})`;break;case"skew-z":this.element.style[l]=`${a||""} skewZ(${s}${t})`;break;default:break}}else if(s.startsWith("[")&&s.endsWith("]")){const e=s.slice(1,-1);this.element.style[l]=`var(--${e})`}else if(s.startsWith("{")&&s.endsWith("}")){const e=s.slice(1,-1).replace(/\\_/g," ");this.element.style[l]=e}else{this.element.style[l]=`${s}${t}`}}))}}applyStyles(e){const s=e.match(/([a-zA-Z]+(?:-[a-zA-Z]+)*)-(-?(?:\d+(\.\d+)?)|(?:[a-zA-Z]+(?:-[a-zA-Z]+)*(?:-[a-zA-Z]+)*)|(?:#[0-9a-fA-F]+)|(?:\[[^\]]+\])|(?:\{[^\}]+\}))([a-zA-Z%]*)/);if(s){const e=s[1];const t=s[2];const l=s[4];this.applyStyle(e,t,l)}}applyMultiStyles(e){const s=e.split(/\s+/);s.forEach((e=>{this.applyStyles(e)}))}}function makeStyle(e,s){const t=(e,s)=>{const t=new makeTenoxUI(e);t.applyMultiStyles(s)};if(typeof s==="string"){const l=document.querySelectorAll(e);l.forEach((e=>t(e,s)))}else if(typeof s==="object"){Object.entries(s).forEach((([e,s])=>{const l=document.querySelectorAll(e);l.forEach((e=>t(e,s)))}))}else{console.warn(`Invalid styles format for "${e}". Make sure you provide style correctly`)}}function defineProps(...e){e.forEach((e=>{Object.entries(e).forEach((([e,s])=>{if(typeof s!=="string"&&!Array.isArray(s)){console.warn(`Invalid property values for "${e}". Make sure you provide values as an array.`)}const t=typeof s==="string"?[s]:s;const l=new newProp(e,t);l.tryAdd()}))}))}function makeStyles(...e){const s={};const t=(e,s)=>{const t=new makeTenoxUI(e);if(typeof s==="string"){t.applyMultiStyles(s)}else{for(const[e,l]of Object.entries(s)){t.applyStyle(e,l,"")}}};const l=(e,s)=>{Object.entries(s).forEach((([s,a])=>{const r=document.querySelectorAll(`${e} ${s}`);if(typeof a==="object"&&!Array.isArray(a)){l(`${e} ${s}`,a)}else{r.forEach((e=>{t(e,a)}))}}))};e.forEach((e=>{Object.entries(e).forEach((([e,a])=>{if(typeof a==="object"&&!Array.isArray(a)){l(e,a)}else{const s=document.querySelectorAll(e);s.forEach((e=>{t(e,a)}))}s[e]=a}))}));return s}function applyHovers(e){Object.entries(e).forEach((([e,[s,t,l=""]])=>{const a=document.querySelectorAll(e);a.forEach((e=>{const a=new makeTenoxUI(e);a.applyMultiStyles(l);e.addEventListener("mouseenter",(()=>{a.applyMultiStyles(t)}));e.addEventListener("mouseleave",(()=>{a.applyMultiStyles(s)}))}))}))}function tenoxui(){Classes=Object.keys(property).map((e=>`[class*="${e}-"]`));AllClasses=document.querySelectorAll(Classes.join(", "));AllClasses.forEach((e=>{const s=e.classList;const t=new makeTenoxUI(e);s.forEach((e=>{t.applyStyles(e)}))}))}export{Classes,AllClasses,defineProps,makeStyle,makeStyles,applyHovers,makeTenoxUI};export default tenoxui;
//# sourceMappingURL=tenoxui.esm.min.js.map