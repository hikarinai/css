/*!
 * TenoxUI CSS Framework v0.7.0 [ https://tenoxui.web.app ]
 * copyright (c) 2024 nousantx
 * licensed under MIT [ https://github.com/nousantx/tenoxui/blob/main/LICENSE ]
 */
const property={p:"padding",pt:"paddingTop",pb:"paddingBottom",pr:"paddingRight",pl:"paddingLeft",ph:["paddingLeft","paddingRight"],pv:["paddingTop","paddingBottom"],m:"margin",mt:"marginTop",mb:"marginBottom",mr:"marginRight",ml:"marginLeft",mv:["marginTop","marginBottom"],mh:["marginLeft","marginRight"],fs:"fontSize",fw:"fontWeight",lh:"lineHeight",ls:"letterSpacing",ta:"text-align",tc:"color",ts:"textStyle",td:"textDecoration",ti:"textIndent",tn:"textReansform",ws:"wordSpacing",family:"fontFamily","text-style":"fontStyle","white-space":"whiteSpace",position:"position",post:"position",z:"zIndex",zi:"zIndex",t:"top",top:"top",b:"bottom",bottom:"bottom",r:"right",right:"right",l:"left",left:"left",display:"display",w:"width","w-mx":"maxWidth","w-mn":"minWidth",h:"height","h-mx":"maxHeight","h-mn":"minHeight",col:"columns",bg:"background","bg-attach":"backgroundAttachment","bg-origin":"backgroundOrigin","bg-size":"backgroundSize","bg-clip":"backgroundClip","bg-repeat":"backgroundRepeat","bg-loc":"backgroundPosition","bg-loc-x":"backgroundPositionX","bg-loc-y":"backgroundPositionY","bg-blend":"backgroundBlendMode","bg-image":"backgroundImage",fx:"flex",flex:"flex","flex-auto":"flex","initial-flex":"flex","flex-parent":["justifyContent","alignItems"],fd:"flexDirection","fx-wrap":"flexWrap","item-order":"order",order:"order","fx-basis":"flexBasis","fx-grow":"flexGrow","fx-shrink":"flexShrink","grid-row":"gridTemplateRows","grid-col":"gridTemplateColumns","auto-grid-row":"gridTemplateRows","auto-grid-col":"gridTemplateColumns","grid-item-row":"gridRow","grid-item-col":"gridColumn","grid-row-end":"gridRowEnd","grid-row-start":"gridRowStart","grid-col-end":"gridColumnEnd","grid-col-start":"gridColumnStart","grid-area":"gridArea","item-place":"placeItems","content-place":"placeContent",gap:"gap","grid-gap":"gridGap","grid-row-gap":"gridRowGap","grid-col-gap":"gridColumnGap","row-gap":"rowGap","col-gap":"columnGap",ac:"alignContent",ai:"align-items",as:"alignSelf",jc:"justify-content",ji:"justifyItems",js:"justifySelf","backdrop-blur":"backdropFilter",filter:"filter",blur:"filter",brightness:"filter",contrast:"filter",grayscale:"filter","hue-rotate":"filter",saturate:"filter",sepia:"filter",opa:"opacity","back-blur":"backdropFilter","back-brightness":"backdropFilter","back-contrast":"backdropFilter","back-grayscale":"backdropFilter","back-saturate":"backdropFilter","back-sepia":"backdropFilter",br:"borderRadius",bw:"borderWidth","bw-left":"borderLeftWidth","bw-right":"borderRightWidth","bw-top":"borderTopWidth","bw-bottom":"borderBottomWidth",bs:"borderStyle","radius-tl":"borderTopLeftRadius","radius-tr":"borderTopRightRadius","radius-bl":"borderBottomLeftRadius","radius-br":"borderBottomRightRadius","radius-top":["borderTopLeftRadius","borderTopRightRadius"],"radius-bottom":["borderBottomLeftRadius","borderBottomRightRadius"],"radius-left":["borderTopLeftRadius","borderBottomLeftRadius"],"radius-right":["borderTopRightRadius","borderBottomRightRadius"],ol:"outline","ol-width":"outlineWidth","ol-style":"outlineStyle","ol-offset":"outlineOffset",curs:"cursor",cursor:"cursor",over:"overflow",overY:"overflowY",overX:"overflowX",float:"float",ratio:"aspectRatio",transition:"transition","tr-time":"transitionDuration","tr-prop":"transitionProperty","tr-timing":"transitionTimingFunction","tr-delay":"transitionDelay",transform:"transform","move-x":"transform","move-y":"transform","move-z":"transform",matrix:"transform","matrix-3d":"transform",rt:"transform","rt-3d":"transform",translate:"transform",scale:"transform","scale-3d":"transform","scale-x":"transform","scale-y":"transform","scale-z":"transform",skew:"transform","skew-x":"transform","skew-y":"transform",isolation:"isolation",box:["width","height"]};let Classes,AllClasses;Classes=Object.keys(property).map((e=>`[class*="${e}-"]`)),AllClasses=document.querySelectorAll(Classes.join(", "));class newProp{constructor(e,t){"string"==typeof e&&Array.isArray(t)?(this[e]=t,Classes.push(`[class*="${e}-"]`),AllClasses=document.querySelectorAll(Classes.join(", "))):console.warn("Invalid arguments for newProp. Please provide a string for name and an array for values.")}tryAdd(){this&&0!==Object.keys(this).length?Object.assign(property,this):console.warn("Invalid newProp instance:",this)}}function addType(e,t){if("string"!=typeof e)throw new Error("Types must be a string");if(!Array.isArray(t)&&"string"!=typeof t)throw new Error("Property must be a string or array");"string"==typeof t&&(t=[t]),new newProp(e,t).tryAdd()}class makeTenoxUI{constructor(e){this.element=e,this.styles=property}applyStyle(e,t,r){let s=this.styles[e];s&&(Array.isArray(s)||(s=[s]),s.forEach((s=>{if("filter"===s){const a=this.element.style[s];this.element.style[s]=a?`${a} ${e}(${t}${r})`:`${e}(${t}${r})`}else if("flex-auto"===e)this.element.style[s]=`1 1 ${t}${r}`;else if("bg-image"===e)this.element.style[s]=`url(${t})`;else if("backdropFilter"===s){const a=this.element.style[s];switch(e){case"back-blur":this.element.style[s]=`${a||""} blur(${t}${r})`;break;case"back-sepia":this.element.style[s]=`${a||""} sepia(${t}${r})`;break;case"back-saturate":this.element.style[s]=`${a||""} saturate(${t}${r})`;break;case"back-grayscale":this.element.style[s]=`${a||""} grayscale(${t}${r})`;break;case"back-brightness":this.element.style[s]=`${a||""} brightness(${t}${r})`;break;case"back-invert":this.element.style[s]=`${a||""} invert(${t}${r})`;break;case"back-contrast":this.element.style[s]=`${a||""} contrast(${t}${r})`}}else if("transform"===s){const a=this.element.style[s];switch(e){case"translate":this.element.style[s]=`${a||""} translate(${t}${r})`;break;case"rt":case"rotate":this.element.style[s]=`${a||""} rotate(${t}${r})`;break;case"move-x":this.element.style[s]=`${a||""} translateX(${t}${r})`;break;case"move-y":this.element.style[s]=`${a||""} translateY(${t}${r})`;break;case"move-z":this.element.style[s]=`${a||""} translateZ(${t}${r})`;break;case"matrix":this.element.style[s]=`${a||""} matrix(${t}${r})`;break;case"matrix-3d":this.element.style[s]=`${a||""} matrix3d(${t}${r})`;break;case"scale-3d":this.element.style[s]=`${a||""} scale3d(${t}${r})`;break;case"scale":this.element.style[s]=`${a||""} scale(${t}${r})`;break;case"scale-x":this.element.style[s]=`${a||""} scaleX(${t}${r})`;break;case"scale-y":this.element.style[s]=`${a||""} scaleY(${t}${r})`;break;case"scale-z":this.element.style[s]=`${a||""} scaleZ(${t}${r})`;break;case"skew-x":this.element.style[s]=`${a||""} skewX(${t}${r})`;break;case"skew-y":this.element.style[s]=`${a||""} skewY(${t}${r})`;break;case"skew-z":this.element.style[s]=`${a||""} skewZ(${t}${r})`}}else if(t.startsWith("[")&&t.endsWith("]")){const e=t.slice(1,-1);this.element.style[s]=`var(--${e})`}else this.element.style[s]=`${t}${r}`})))}applyStyles(e){const t=e.match(/([a-zA-Z]+(?:-[a-zA-Z]+)*)-(-?(?:\d+(\.\d+)?)|(?:[a-zA-Z]+(?:-[a-zA-Z]+)*(?:-[a-zA-Z]+)*)|(?:#[0-9a-fA-F]+)|(?:\[[^\]]+\]))([a-zA-Z%]*)/);if(t){const e=t[1],r=t[2],s=t[4];this.applyStyle(e,r,s)}}applyMultiStyles(e){e.split(/\s+/).forEach((e=>{this.applyStyles(e)}))}}function makeStyle(e,t){const r=(e,t)=>{new makeTenoxUI(e).applyMultiStyles(t)};if("string"==typeof t){document.querySelectorAll(e).forEach((e=>r(e,t)))}else"object"==typeof t?Object.entries(t).forEach((([e,t])=>{document.querySelectorAll(e).forEach((e=>r(e,t)))})):console.warn(`Invalid styles format for "${e}". Make sure you provide style correctly`)}function defineProps(e){Object.entries(e).forEach((([e,t])=>{"string"==typeof t||Array.isArray(t)||console.warn(`Invalid property values for "${e}". Make sure you provide values as an array.`);new newProp(e,"string"==typeof t?[t]:t).tryAdd()}))}function makeStyles(e){const t={},r=(e,t)=>{const r=new makeTenoxUI(e);if("string"==typeof t)r.applyMultiStyles(t);else for(const[e,s]of Object.entries(t))r.applyStyle(e,s,"")},s=(e,t)=>{Object.entries(t).forEach((([t,a])=>{const o=document.querySelectorAll(`${e} ${t}`);"object"!=typeof a||Array.isArray(a)?o.forEach((e=>{r(e,a)})):s(`${e} ${t}`,a)}))};return Object.entries(e).forEach((([e,a])=>{if("object"!=typeof a||Array.isArray(a)){document.querySelectorAll(e).forEach((e=>{r(e,a)}))}else s(e,a);t[e]=a})),t}function applyHover(e,t,r,s=""){document.querySelectorAll(e).forEach((e=>{const a=new makeTenoxUI(e);a.applyMultiStyles(s),e.addEventListener("mouseenter",(()=>{a.applyMultiStyles(r)})),e.addEventListener("mouseleave",(()=>{a.applyMultiStyles(t)}))}))}function applyHovers(e){Object.entries(e).forEach((([e,[t,r,s=""]])=>{document.querySelectorAll(e).forEach((e=>{const a=new makeTenoxUI(e);a.applyMultiStyles(s),e.addEventListener("mouseenter",(()=>{a.applyMultiStyles(r)})),e.addEventListener("mouseleave",(()=>{a.applyMultiStyles(t)}))}))}))}function tenoxui(){Classes=Object.keys(property).map((e=>`[class*="${e}-"]`)),AllClasses=document.querySelectorAll(Classes.join(", ")),AllClasses.forEach((e=>{const t=e.classList,r=new makeTenoxUI(e);t.forEach((e=>{r.applyStyles(e)}))}))}tenoxui();
//# sourceMappingURL=tui.min.js.map