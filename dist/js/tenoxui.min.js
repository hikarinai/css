/*!
 * tenoxui/css v0.8.0 (https://github.com/tenoxui/css)
 * Copyright (c) 2024 NOuSantx
 * Licensed under the MIT License (https://github.com/tenoxui/css/blob/main/LICENSE)
 */
const property={p:"padding",pt:"paddingTop",pb:"paddingBottom",pr:"paddingRight",pl:"paddingLeft",ph:["paddingLeft","paddingRight"],pv:["paddingTop","paddingBottom"],m:"margin",mt:"marginTop",mb:"marginBottom",mr:"marginRight",ml:"marginLeft",mv:["marginTop","marginBottom"],mh:["marginLeft","marginRight"],fs:"fontSize",fw:"fontWeight",lh:"lineHeight",ls:"letterSpacing",ta:"textAlign",tc:"color",ts:"textStyle",td:"textDecoration",ti:"textIndent",tn:"textReansform",ws:"wordSpacing",family:"fontFamily","text-s":"fontStyle","white-space":"whiteSpace",position:"position",z:"zIndex",t:"top",b:"bottom",r:"right",l:"left",d:"display",display:"display",w:"width","w-mx":"maxWidth","w-mn":"minWidth",h:"height","h-mx":"maxHeight","h-mn":"minHeight",bg:"background","bg-attach":"backgroundAttachment","bg-origin":"backgroundOrigin","bg-size":"backgroundSize","bg-clip":"backgroundClip","bg-repeat":"backgroundRepeat","bg-loc":"backgroundPosition","bg-loc-x":"backgroundPositionX","bg-loc-y":"backgroundPositionY","bg-blend":"backgroundBlendMode","bg-image":"backgroundImage",fx:"flex",flex:"flex","flex-auto":"flex",fd:"flexDirection","fx-wrap":"flexWrap","item-order":"order",order:"order","fx-basis":"flexBasis","fx-grow":"flexGrow","fx-shrink":"flexShrink",gap:"gap","row-gap":"rowGap","col-gap":"columnGap",ac:"alignContent",ai:"align-items",as:"alignSelf",jc:"justifyContent",ji:"justifyItems",js:"justifySelf",filter:"filter",blur:"filter",brightness:"filter",contrast:"filter",grayscale:"filter","hue-rotate":"filter",saturate:"filter",sepia:"filter",opa:"opacity","back-blur":"backdropFilter","back-brightness":"backdropFilter","back-contrast":"backdropFilter","back-grayscale":"backdropFilter","back-saturate":"backdropFilter","back-sepia":"backdropFilter",br:"borderRadius",bw:"borderWidth","bw-left":"borderLeftWidth","bw-right":"borderRightWidth","bw-top":"borderTopWidth","bw-bottom":"borderBottomWidth",bs:"borderStyle","radius-tl":"borderTopLeftRadius","radius-tr":"borderTopRightRadius","radius-bl":"borderBottomLeftRadius","radius-br":"borderBottomRightRadius","radius-top":["borderTopLeftRadius","borderTopRightRadius"],"radius-bottom":["borderBottomLeftRadius","borderBottomRightRadius"],"radius-left":["borderTopLeftRadius","borderBottomLeftRadius"],"radius-right":["borderTopRightRadius","borderBottomRightRadius"],ol:"outline","ol-width":"outlineWidth","ol-style":"outlineStyle","ol-offset":"outlineOffset",cursor:"cursor",over:"overflow","over-y":"overflowY","over-x":"overflowX",float:"float",ratio:"aspectRatio",transition:"transition","tr-time":"transitionDuration","tr-prop":"transitionProperty","tr-timing":"transitionTimingFunction","tr-delay":"transitionDelay",transform:"transform","move-x":"transform","move-y":"transform","move-z":"transform",matrix:"transform","matrix-3d":"transform","rt-3d":"transform",translate:"transform","scale-3d":"transform","scale-x":"transform","scale-y":"transform","scale-z":"transform",skew:"transform","skew-x":"transform","skew-y":"transform",rt:"rotate",scale:"scale",box:["width","height"],"flex-parent":["justifyContent","alignItems"]};let Classes,AllClasses;Classes=Object.keys(property).map((e=>`[class*="${e}-"]`));AllClasses=document.querySelectorAll(Classes.join(", "));class newProp{constructor(e,t){if(typeof e!=="string"||!Array.isArray(t)){console.warn("Invalid arguments for newProp. Please provide a string for name and an array for values.");return}this[e]=t;Classes.push(`[class*="${e}-"]`);AllClasses=document.querySelectorAll(Classes.join(", "))}tryAdd(){if(!this||Object.keys(this).length===0){console.warn("Invalid newProp instance:",this);return}Object.assign(property,this)}}class makeTenoxUI{constructor(e){this.element=e;this.styles=property}applyStyle(e,t,s){let r=this.styles[e];if(r){if(!Array.isArray(r)){r=[r]}r.forEach((r=>{if(r==="filter"){const a=this.element.style[r];this.element.style[r]=a?`${a} ${e}(${t}${s})`:`${e}(${t}${s})`}else if(e==="flex-auto"){this.element.style[r]=`1 1 ${t}${s}`}else if(e==="bg-image"){this.element.style[r]=`url(${t})`}else if(r==="backdropFilter"){const a=this.element.style[r];switch(e){case"back-blur":this.element.style[r]=`${a||""} blur(${t}${s})`;break;case"back-sepia":this.element.style[r]=`${a||""} sepia(${t}${s})`;break;case"back-saturate":this.element.style[r]=`${a||""} saturate(${t}${s})`;break;case"back-grayscale":this.element.style[r]=`${a||""} grayscale(${t}${s})`;break;case"back-brightness":this.element.style[r]=`${a||""} brightness(${t}${s})`;break;case"back-invert":this.element.style[r]=`${a||""} invert(${t}${s})`;break;case"back-contrast":this.element.style[r]=`${a||""} contrast(${t}${s})`;break;default:break}}else if(r==="transform"){const a=this.element.style[r];switch(e){case"translate":this.element.style[r]=`${a||""} translate(${t}${s})`;break;case"move-x":this.element.style[r]=`${a||""} translateX(${t}${s})`;break;case"move-y":this.element.style[r]=`${a||""} translateY(${t}${s})`;break;case"move-z":this.element.style[r]=`${a||""} translateZ(${t}${s})`;break;case"matrix":this.element.style[r]=`${a||""} matrix(${t}${s})`;break;case"matrix-3d":this.element.style[r]=`${a||""} matrix3d(${t}${s})`;break;case"scale-3d":this.element.style[r]=`${a||""} scale3d(${t}${s})`;break;case"scale-x":this.element.style[r]=`${a||""} scaleX(${t}${s})`;break;case"scale-y":this.element.style[r]=`${a||""} scaleY(${t}${s})`;break;case"scale-z":this.element.style[r]=`${a||""} scaleZ(${t}${s})`;break;case"skew-x":this.element.style[r]=`${a||""} skewX(${t}${s})`;break;case"skew-y":this.element.style[r]=`${a||""} skewY(${t}${s})`;break;case"skew-z":this.element.style[r]=`${a||""} skewZ(${t}${s})`;break;default:break}}else if(t.startsWith("[")&&t.endsWith("]")){const e=t.slice(1,-1);this.element.style[r]=`var(--${e})`}else if(t.startsWith("{")&&t.endsWith("}")){const e=t.slice(1,-1).replace(/\\_/g," ");this.element.style[r]=e}else{this.element.style[r]=`${t}${s}`}}))}}applyStyles(e){const t=e.match(/([a-zA-Z]+(?:-[a-zA-Z]+)*)-(-?(?:\d+(\.\d+)?)|(?:[a-zA-Z]+(?:-[a-zA-Z]+)*(?:-[a-zA-Z]+)*)|(?:#[0-9a-fA-F]+)|(?:\[[^\]]+\])|(?:\{[^\}]+\}))([a-zA-Z%]*)/);if(t){const e=t[1];const s=t[2];const r=t[4];this.applyStyle(e,s,r)}}applyMultiStyles(e){const t=e.split(/\s+/);t.forEach((e=>{this.applyStyles(e)}))}}function makeStyle(e,t){const s=(e,t)=>{const s=new makeTenoxUI(e);s.applyMultiStyles(t)};if(typeof t==="string"){const r=document.querySelectorAll(e);r.forEach((e=>s(e,t)))}else if(typeof t==="object"){Object.entries(t).forEach((([e,t])=>{const r=document.querySelectorAll(e);r.forEach((e=>s(e,t)))}))}else{console.warn(`Invalid styles format for "${e}". Make sure you provide style correctly`)}}function defineProps(...e){e.forEach((e=>{Object.entries(e).forEach((([e,t])=>{if(typeof t!=="string"&&!Array.isArray(t)){console.warn(`Invalid property values for "${e}". Make sure you provide values as an array.`)}const s=typeof t==="string"?[t]:t;const r=new newProp(e,s);r.tryAdd()}))}))}function makeStyles(...e){const t={};const s=(e,t)=>{const s=new makeTenoxUI(e);if(typeof t==="string"){s.applyMultiStyles(t)}else{for(const[e,r]of Object.entries(t)){s.applyStyle(e,r,"")}}};const r=(e,t)=>{Object.entries(t).forEach((([t,a])=>{const o=document.querySelectorAll(`${e} ${t}`);if(typeof a==="object"&&!Array.isArray(a)){r(`${e} ${t}`,a)}else{o.forEach((e=>{s(e,a)}))}}))};e.forEach((e=>{Object.entries(e).forEach((([e,a])=>{if(typeof a==="object"&&!Array.isArray(a)){r(e,a)}else{const t=document.querySelectorAll(e);t.forEach((e=>{s(e,a)}))}t[e]=a}))}));return t}function applyHovers(e){Object.entries(e).forEach((([e,[t,s,r=""]])=>{const a=document.querySelectorAll(e);a.forEach((e=>{const a=new makeTenoxUI(e);a.applyMultiStyles(r);e.addEventListener("mouseenter",(()=>{a.applyMultiStyles(s)}));e.addEventListener("mouseleave",(()=>{a.applyMultiStyles(t)}))}))}))}function tenoxui(){Classes=Object.keys(property).map((e=>`[class*="${e}-"]`));AllClasses=document.querySelectorAll(Classes.join(", "));AllClasses.forEach((e=>{const t=e.classList;const s=new makeTenoxUI(e);t.forEach((e=>{s.applyStyles(e)}))}))}tenoxui();
//# sourceMappingURL=tenoxui.min.js.map